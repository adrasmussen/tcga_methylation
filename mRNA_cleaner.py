# /usr/bin/python

import pandas, tcga_tools
import numpy as np
import matplotlib.pyplot as plt

from progressbar import progressbar

# Pre-cleaned data were stored in R dataframes (cancer.Rda), then decompressed and turned into .csv files
# saved in R via write.table(lcounts, file="D:/TCGA/clean/mRNASeq/OV.csv", col.names=T, sep=",")

# the lcounts dataframe is the log + offset of the original ncounts data

# this script selects a particular chromosome, then finds all the genes for that chromosome and saves
# that new dataframe as a hdf5


# location of the files, allowed folders are Meth450, mRNASeq
TCGA_root = tcga_tools.file_root

# generated by R (oof)
TCGA_filetype = '.csv'

# allowed cancers are OV, ACC, etc
cancer_list = tcga_tools.cancer_list
#cancer_list = ['OV', 'UCS', 'CHOL']

# chromosome must be a str since it includes X and Y
chromosome = tcga_tools.chromosome

# first, read in the list of genes on the specified chromosome into a set
gene_file = open(TCGA_root + 'chr_gene_list/ch_%s_genes.csv' % chromosome, 'r')

gene_set = set()

for line in gene_file:
    gene_set.add(line.split(',')[0])

gene_file.close()

for cancer in cancer_list:
    print('Reading in cancer: %s' % cancer)
    # create the dataframe
    D = pandas.read_csv(TCGA_root + 'mRNASeq/' + cancer + TCGA_filetype, sep=',')

    # transpose the dataframe to shape (samples, genes)
    D = D.transpose()

    # drop any gene (column) not found in the gene_set for this chromosome
    print('Finding ch %s genes: ' % chromosome, end='')
    wrong_genes = set()
    for gene in D.columns:

        if gene.split('|')[0] not in gene_set:
            wrong_genes.add(gene)

    D.drop(columns=wrong_genes, inplace=True)
    print('Done')

    # print the number of genes
    print('Found %s genes' % len(D.columns))

    # save the dataframe
    print('Saving %s chromosome %s dataframe: ' % (cancer, chromosome), end='')
    D.to_hdf(TCGA_root + 'mRNASeq/%s_%s.h5' % (cancer, chromosome), key='df')
    print('Done\n')

print('Cleaning complete')
